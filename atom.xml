<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://heshiyingx.github.io</id>
    <title>Gridea</title>
    <updated>2021-02-05T04:22:09.329Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://heshiyingx.github.io"/>
    <link rel="self" href="https://heshiyingx.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://heshiyingx.github.io/images/avatar.png</logo>
    <icon>https://heshiyingx.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[1.环境安装]]></title>
        <id>https://heshiyingx.github.io/post/huan-jing-an-zhuang/</id>
        <link href="https://heshiyingx.github.io/post/huan-jing-an-zhuang/">
        </link>
        <updated>2020-12-10T15:40:03.000Z</updated>
        <summary type="html"><![CDATA[<p>基础阶段的环境搭建。虚拟环境的搭建以及基础阶段常用的包的安装。</p>
]]></summary>
        <content type="html"><![CDATA[<p>基础阶段的环境搭建。虚拟环境的搭建以及基础阶段常用的包的安装。</p>
<!-- more -->
<h1 id="1虚拟环境virtualenv安装">1.🏡虚拟环境virtualenv安装</h1>
<p>python 的虚拟环境可以为一个 python 项目提供独立的解释环境、依赖包等资源，既能够很好的隔离不同项目使用不同 python 版本带来的冲突，而且还能方便项目的发布。</p>
<p>virtualenv可用于创建独立的 Python 环境，它会创建一个包含项目所必须要的执行文件。</p>
<h2 id="11-安装virtualenv">1.1 安装virtualenv</h2>
<pre><code class="language-python">sudo pip3 install virtualenv
# 配置 pip 安装第三方库的镜像源地址
sudo pip install -i https://pypi.douban.com/simple virtualenv
# 查看版本
virtualenv --version
</code></pre>
<h2 id="12-virtualenv使用方法">1.2 virtualenv使用方法</h2>
<p>如下命令表示在当前目录下创建一个名叫 env 的目录（虚拟环境），该目录下包含了独立的 Python 运行程序,以及 pip副本用于安装其他的 packge</p>
<pre><code class="language-python"># 当前目录创建虚拟环境
virtualenv [虚拟环境名称]
# 创建 env 的时候可以选择 Python 解释器，例如：
virtualenv -p /usr/local/bin/python3 [虚拟环境名称]
</code></pre>
<p>默认情况下，虚拟环境会依赖系统环境中的 site packages，就是说系统中已经安装好的第三方 package 也会安装在虚拟环境中，如果不想依赖这些 package，那么可以加上参数 --no-site-packages 建立虚拟环境</p>
<pre><code class="language-python"># 创建的虚拟环境不包含系统环境中的site packages
virtualenv --no-site-packages [虚拟环境名称]
</code></pre>
<p><strong>启动虚拟环境</strong></p>
<pre><code class="language-python">cd  [虚拟环境名称]
source ./bin/activate
</code></pre>
<p><strong>退出虚拟环境</strong></p>
<pre><code class="language-python">deactivate
</code></pre>
<p><strong>在虚拟环境安装 Python packages</strong><br>
Virtualenv 附带有 pip 安装工具，因此需要安装的 packages 可以直接运行：</p>
<pre><code class="language-python">pip install [套件名称]
</code></pre>
<h2 id="13-virtualenvwrapper">1.3 Virtualenvwrapper</h2>
<p>Virtualenvwrapper 是一个虚拟环境管理工具，它能够管理创建的虚拟环境的位置，并能够方便地查看虚拟环境的名称以及切换到指定的虚拟环境。</p>
<p><strong>安装（确保virtualenv已经安装）</strong><br>
安装需要在非虚拟环境下进行</p>
<pre><code class="language-python">sudo pip install virtualenvwrapper
# 或者使用豆瓣源
sudo pip install -i https://pypi.douban.com/simple virtualenvwrapper
</code></pre>
<p><strong>查找virtualenvwrapper.sh</strong></p>
<pre><code class="language-python">which virtualenvwrapper.sh
</code></pre>
<blockquote>
<p>我的机器上的位置是：/Library/Frameworks/Python.framework/Versions/3.4/bin/virtualenvwrapper.sh</p>
</blockquote>
<p><strong>修改.bash_profile</strong><br>
打开/Users/用户名/.bash_profile ，在最后加入：</p>
<pre><code class="language-bash">export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_SCRIPT=/Library/Frameworks/Python.framework/Versions/3.4/bin/virtualenvwrapper.sh
export VIRTUALENVWRAPPER_PYTHON=/Library/Frameworks/Python.framework/Versions/3.4/bin/python3
export VIRTUALENVWRAPPER_VIRTUALENV=/Library/Frameworks/Python.framework/Versions/3.4/bin/virtualenv
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
source /Library/Frameworks/Python.framework/Versions/3.4/bin/virtualenvwrapper.sh
</code></pre>
<h2 id="14-virtualenvwrapper的使用">1.4 Virtualenvwrapper的使用</h2>
<p><strong>创建虚拟机</strong></p>
<pre><code class="language-python">mkvirtualenv [虚拟环境名称]
# 当然也可以指定虚拟机的 python 版本
mkvirtualenv [虚拟环境名称] -p /usr/local/bin/python3 
</code></pre>
<p><strong>列出虚拟环境列表</strong></p>
<pre><code class="language-bash">workon 或者 lsvirtualenv
</code></pre>
<p><strong>启动/切换虚拟环境</strong></p>
<pre><code class="language-bash">workon [虚拟环境名称]
</code></pre>
<p><strong>删除虚拟环境</strong></p>
<pre><code class="language-bash">rmvirtualenv [虚拟环境名称]
</code></pre>
<p><strong>离开虚拟环境，和 virutalenv 一样的命令</strong></p>
<pre><code class="language-bash">deactivate
</code></pre>
<h1 id="2机器学习基础阶段的环境搭建">2.机器学习基础阶段的环境搭建</h1>
<p>整个机器学习基础阶段会用到Matplotlib、Numpy、Pandas等库，为了统一版本号在环境中使用，将所有的库及其版本放到了文件requirements.txt当中，然后统一安装</p>
<p><strong>新建一个用于人工智能环境的虚拟环境</strong></p>
<pre><code class="language-bash">mkvirtualenv ai_base
</code></pre>
<p>requirements.txt 的内容</p>
<pre><code class="language-bash">matplotlib==2.2.2
numpy==1.16.5
pandas==1.2.1
tables==3.6.1
jupyter==1.0.0
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://heshiyingx.github.io/post/hello-gridea/</id>
        <link href="https://heshiyingx.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>